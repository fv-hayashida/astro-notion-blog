---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '../server-constants.ts';
import { getDatabase } from '../lib/notion/client.ts';
import { getNavLink, getStaticFilePath, filePath } from '../lib/blog-helpers.ts';
import '../styles/syntax-coloring.css';
import GoogleAnalytics from '../components/GoogleAnalytics.astro';
import SearchModal from '../components/SearchModal.astro';
import SearchButton from '../components/SearchButton.astro';
import '../styles/global.css';
import '../styles/syntax-coloring.css'
import '../styles/global.css'

export interface Props {
  title: string;
  description: string;
  path: string;
  ogImage: string;
}
const database = await getDatabase();

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(getStaticFilePath('/default-og-image.png'), Astro.site)


// Notionのカバー画像URL
let coverImageURL: string;
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url;
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url));
    } catch {
      console.log('Invalid DB cover image URL: ', database.Cover?.Url);
    }
  }
}

let customIconURL: string;
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url));
  } catch {
    console.log('Invalid DB custom icon URL: ', database.Icon?.Url);
  }
}


---

<!doctype html>
<html lang="jp" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  
  <body>
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <div class="">
      <header class="bg-[#ffda99] py-4">
        <div class="container mx-auto">
          <h1>
            <a href={getNavLink('/')}>
              <!-- { <span>{database.Icon.Emoji}</span> } -->
              <!-- { <img src={database.Icon.Url} alt="Site icon image" /> } -->
              <!-- <img src={customIconURL} class="custom-icon" alt="Site icon image" /> -->
              <span class="text-[#633] text-4xl font-bold">{database.Title}</span>
            </a>
          </h1>
          <div class="description">
            {database.Description}
          </div>
        </div>
      </header>

      <div class="container mx-auto py-6 gap-x-6 flex">
        <main class="shadow w-full px-6 sm:p-8 ">
            <slot name="main" />

            <footer>
              <div>
                <span>Powered by&nbsp;</span>
                <a href="https://github.com/otoyo/astro-notion-blog">astro-notion-blog</a>
              </div>
            </footer>
        </main>

        <aside class="w-[360px] px-6 py-4 bg-white shadow h-fit hidden lg:block">
          <SearchButton />
          <slot name="aside" />
        </aside>
      </div>
    </div>

    <SearchModal />
    {ENABLE_LIGHTBOX && <script src={getStaticFilePath('/scripts/fslightbox.js')} />}
  </body>
</html>

<style>
 
</style>

<style is:global>
  :root {
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;

    --bg: #edc;
    --fg: #5a3a3a;    /* font */
    --card-bg: #fffefe;

    --orange-100: #ffedd5;
    --amber-100: #fef3c7;
    --amber-200: #fde68a;
    --amber-300: #fcd34d;
    --amber-400: #fbbf24;
    --amber-500: #f59e0b;
    --amber-600: #d97706;

    --accents-1: #666;
    --accents-2: #666;
    --accents-3: #666;
    --geist-foreground: #000;
    --geist-success: #690;

    --radius: 4px;

    --font-sans:
      -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell',
      'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono', Courier, monospace;
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    font-size: 16px;
  }

  body {
    min-height: 100vh;
    background: var(--bg);
    color: var(--fg);
    font-family:
      ui-sans-serif,
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Helvetica,
      'Hiragino Sans',
      'Hiragino Kaku Gothic ProN',
      'Hiragino Sans GB',
      メイリオ,
      Meiryo,
      'Apple Color Emoji',
      Arial,
      sans-serif,
      'Segoe UI Emoji',
      'Segoe UI Symbol';

    /*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
    background-position:
      0 0,
      25px 25px;
    background-attachment: fixed;
    background-size: 50px 50px;

    /* Hack */
    overflow-x: hidden;

    -webkit-font-smoothing: antialiased;
    -webkit-text-size-adjust: 100%;
  }

  div.cover img {
    display: block;
    width: 100%;
    height: 20vh;
    object-fit: cover;
    object-position: center 60%;
  }

  main{
    background: var(--card-bg);
  }
  main footer {
    margin: 30px 0 10px;
    text-align: center;
    font-size: 0.75rem;
  }
  @media (max-width: 640px) {
    main footer {
      margin: 0 auto 30px;
    }
  }
  main footer span {
    color: #777;
  }
  main footer a {
    color: inherit;
    text-decoration: underline;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
  }
  a:hover {
    color: var(--accents-1);
  }

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: rgba(247, 212, 255, 0.8);
  }



  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: #333;
  }

  code {
    font-size: 0.9rem;
    background: rgba(135, 131, 120, 0.15);
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }
/* 
  table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: top;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    text-align: left;
    line-height: 1.2rem;
  }
  table td::after {
    content: '';
    display: inline-block;
    min-height: 0.9rem;
  } */
</style>
